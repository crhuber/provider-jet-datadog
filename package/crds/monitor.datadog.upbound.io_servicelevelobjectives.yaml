---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: servicelevelobjectives.monitor.datadog.upbound.io
spec:
  group: monitor.datadog.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - datadog
    kind: ServiceLevelObjective
    listKind: ServiceLevelObjectiveList
    plural: servicelevelobjectives
    singular: servicelevelobjective
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceLevelObjective is the Schema for the ServiceLevelObjectives
          API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceLevelObjectiveSpec defines the desired state of ServiceLevelObjective
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  description:
                    description: A description of this service level objective.
                    type: string
                  forceDelete:
                    description: A boolean indicating whether this monitor can be
                      deleted even if it’s referenced by other resources (e.g. dashboards).
                    type: boolean
                  groups:
                    description: A static set of groups to filter monitor-based SLOs
                    items:
                      type: string
                    type: array
                  monitorIds:
                    description: A static set of monitor IDs to use as part of the
                      SLO
                    items:
                      type: number
                    type: array
                  name:
                    description: Name of Datadog service level objective
                    type: string
                  query:
                    description: The metric query of good / total events
                    items:
                      properties:
                        denominator:
                          description: The sum of the `total` events.
                          type: string
                        numerator:
                          description: The sum of all the `good` events.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'A list of tags to associate with your service level
                      objective. This can help you categorize and filter service level
                      objectives in the service level objectives page of the UI. Note:
                      it''s not currently possible to filter by these tags when querying
                      via the API'
                    items:
                      type: string
                    type: array
                  thresholds:
                    description: A list of thresholds and targets that define the
                      service level objectives from the provided SLIs.
                    items:
                      properties:
                        target:
                          description: The objective's target in`[0,100]`.
                          type: number
                        timeframe:
                          description: The time frame for the objective. The mapping
                            from these types to the types found in the Datadog Web
                            UI can be found in the Datadog API documentation page.
                            Valid values are `7d`, `30d`, `90d`, `custom`.
                          type: string
                        warning:
                          description: The objective's warning value in `[0,100]`.
                            This must be greater than the target value.
                          type: number
                      type: object
                    type: array
                  type:
                    description: The type of the service level objective. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object).
                      Valid values are `metric`, `monitor`.
                    type: string
                  validate:
                    description: Whether or not to validate the SLO.
                    type: boolean
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  description:
                    description: A description of this service level objective.
                    type: string
                  forceDelete:
                    description: A boolean indicating whether this monitor can be
                      deleted even if it’s referenced by other resources (e.g. dashboards).
                    type: boolean
                  groups:
                    description: A static set of groups to filter monitor-based SLOs
                    items:
                      type: string
                    type: array
                  monitorIds:
                    description: A static set of monitor IDs to use as part of the
                      SLO
                    items:
                      type: number
                    type: array
                  name:
                    description: Name of Datadog service level objective
                    type: string
                  query:
                    description: The metric query of good / total events
                    items:
                      properties:
                        denominator:
                          description: The sum of the `total` events.
                          type: string
                        numerator:
                          description: The sum of all the `good` events.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'A list of tags to associate with your service level
                      objective. This can help you categorize and filter service level
                      objectives in the service level objectives page of the UI. Note:
                      it''s not currently possible to filter by these tags when querying
                      via the API'
                    items:
                      type: string
                    type: array
                  thresholds:
                    description: A list of thresholds and targets that define the
                      service level objectives from the provided SLIs.
                    items:
                      properties:
                        target:
                          description: The objective's target in`[0,100]`.
                          type: number
                        timeframe:
                          description: The time frame for the objective. The mapping
                            from these types to the types found in the Datadog Web
                            UI can be found in the Datadog API documentation page.
                            Valid values are `7d`, `30d`, `90d`, `custom`.
                          type: string
                        warning:
                          description: The objective's warning value in `[0,100]`.
                            This must be greater than the target value.
                          type: number
                      type: object
                    type: array
                  type:
                    description: The type of the service level objective. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object).
                      Valid values are `metric`, `monitor`.
                    type: string
                  validate:
                    description: Whether or not to validate the SLO.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || has(self.initProvider.name)'
            - message: thresholds is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.thresholds)
                || has(self.initProvider.thresholds)'
            - message: type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || has(self.initProvider.type)'
          status:
            description: ServiceLevelObjectiveStatus defines the observed state of
              ServiceLevelObjective.
            properties:
              atProvider:
                properties:
                  description:
                    description: A description of this service level objective.
                    type: string
                  forceDelete:
                    description: A boolean indicating whether this monitor can be
                      deleted even if it’s referenced by other resources (e.g. dashboards).
                    type: boolean
                  groups:
                    description: A static set of groups to filter monitor-based SLOs
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  monitorIds:
                    description: A static set of monitor IDs to use as part of the
                      SLO
                    items:
                      type: number
                    type: array
                  name:
                    description: Name of Datadog service level objective
                    type: string
                  query:
                    description: The metric query of good / total events
                    items:
                      properties:
                        denominator:
                          description: The sum of the `total` events.
                          type: string
                        numerator:
                          description: The sum of all the `good` events.
                          type: string
                      type: object
                    type: array
                  tags:
                    description: 'A list of tags to associate with your service level
                      objective. This can help you categorize and filter service level
                      objectives in the service level objectives page of the UI. Note:
                      it''s not currently possible to filter by these tags when querying
                      via the API'
                    items:
                      type: string
                    type: array
                  thresholds:
                    description: A list of thresholds and targets that define the
                      service level objectives from the provided SLIs.
                    items:
                      properties:
                        target:
                          description: The objective's target in`[0,100]`.
                          type: number
                        targetDisplay:
                          description: A string representation of the target that
                            indicates its precision. It uses trailing zeros to show
                            significant decimal places (e.g. `98.00`).
                          type: string
                        timeframe:
                          description: The time frame for the objective. The mapping
                            from these types to the types found in the Datadog Web
                            UI can be found in the Datadog API documentation page.
                            Valid values are `7d`, `30d`, `90d`, `custom`.
                          type: string
                        warning:
                          description: The objective's warning value in `[0,100]`.
                            This must be greater than the target value.
                          type: number
                        warningDisplay:
                          description: A string representation of the warning target
                            (see the description of the target_display field for details).
                          type: string
                      type: object
                    type: array
                  type:
                    description: The type of the service level objective. The mapping
                      from these types to the types found in the Datadog Web UI can
                      be found in the Datadog API [documentation page](https://docs.datadoghq.com/api/v1/service-level-objectives/#create-a-slo-object).
                      Valid values are `metric`, `monitor`.
                    type: string
                  validate:
                    description: Whether or not to validate the SLO.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
